* better organize the model classes:
	- reuse the binary archives to load/save the model
	- less verbose design 
	- focus more on convolution models (learning combinations of filters)

* display for each loss/model/task:
	- (ids...)\n id name params
	- replace description with params

* update experiments scripts

* base class to keep (rows, cols, inputs, outputs): can be used for models & tasks

* can models use matrices as inputs?!
	- to speed-up gradient computation, something like a convolution

- train/test models:
	- update script: linear model (lbfgs vs. bootstrapping)

	- FASTER linear training!
		- more efficient: v * u.transpose()

	- experimentation script: train linear models on all datasets (256, 1e-5)

	- regularization: l2, symmetry
	- could add options to filter the input: e.g. smoothing, normalization, contrast equalization

- small ui application to visualize task images

- faster RGB to CIELab transform (goal: 1s single-thread version of the color testing program)

- add other datasets:
	- INRIA car and person datasets
	- NORB, inria pedestrian detection, inria human detection, dymlerchrysler human detection, face detection, PASCALVoc2011, CALTECH101...

- autoencoders: how to generate samples ?!

- may revive/improve the bootstrapping idea:
        - also bootstrap the background of the images containing faces
                => many billions of samples (may require removing some profile faces or some animals 
                        that look very much like frontal faces)

